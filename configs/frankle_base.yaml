## overridable via commandline

experiment_name: "frankle_resnet_cifar100" # str
seed: 7112018
dataset: "cifar 100" # enum (spaces convert to '_')
model: "resnet" # enum
learning_rate: 0.1 # float
learning_rate_drop: 10 #reduce learning rate by dividing it by this number
learning_rate_drop_intervals: [80, 120] #apply learning rate reduction at these epochs
momentum: 0.9
optimizer: "SGD"
scheduler: "MultiStepLR"
init_weights: True
weight_decay: 0.0001
batch_size: 128 # int
validation_list: 'validation_cifar100_5%.txt' # list ints or name of list in 'lists' folder

epochs: 160 # int
gpus: [0,1]  # list ints


## not overridable via commandline

freeze_parameter_list: [] # list of regexes which if match a  fully qualified parameter name (i.e. resnet.model.bn_1.weight) have their weights frozen (not updated but calculated)  

model_kwargs: # dict -> any value
  layers: [3, 4, 6, 3]
  num_output_classes: 100
  zero_init_residual: false
  groups: 1
  width_per_group: 64
  replace_stride_with_dilation: null
  
transforms:
  - !PPRandomHorizontalFlip {p: 0.5}
  - !PPRandomAffine         {degrees: 0, translate: !!python/tuple [0.125, 0.125]} #should translate by 4 pixels since the images are 32x32
  - !PPToTensor {}

transforms_test:
  - !PPToTensor {}

target_transforms: []
target_transforms_test: []

trackers: # list of enums -> kwarg dict
  - !GradientsTracker {key: "gradients"}  # objects with 'yaml_tag' and inheriting from yaml.YAMLobject, can be instantiated this way!

    
